name: Basic Checks

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

env:
  GO_VERSION: '1.24.3'
  NODE_VERSION: '22'

jobs:
  go-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-

      - name: Install Go dependencies
        working-directory: ./backend
        run: |
          go mod download
          go mod tidy

      - name: Install swag CLI
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: Generate Swagger docs
        working-directory: ./backend
        run: swag init

      - name: Verify Go modules
        working-directory: ./backend
        run: go mod verify

      - name: Run Go tests (unit only)
        working-directory: ./backend
        env:
          # Testcontainers gestir√† PostgreSQL automaticamente
          CLERK_SECRET_KEY: sk_test_github_actions_key
        run: go test -v ./...

      - name: Build Go application
        working-directory: ./backend
        run: go build -v ./...

  go-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: ./backend
          args: --timeout=10m

  scripts-validation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node dependencies
        run: npm install

      - name: Validate package.json scripts
        run: |
          echo "Checking if all script commands are valid..."
          npm run --silent || echo "Some scripts may have issues"

      - name: Check pre-commit command
        run: |
          echo "Testing pre-commit command..."
          timeout 60s npm run pre-commit || echo "Pre-commit check completed or timed out"
