FROM golang:1.23-alpine AS builder
WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download
COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -o main .

# Stage finale per sviluppo (con strumenti di debug)
FROM golang:1.23-alpine AS dev
WORKDIR /app

# Installa strumenti per sviluppo
RUN apk add --no-cache curl git

# Copia il codice sorgente
COPY . .

# Scarica le dipendenze
RUN go mod download

# Compila con flag di debug
RUN CGO_ENABLED=0 GOOS=linux go build -o main .

# Metadata dell'immagine per sviluppo
LABEL org.opencontainers.image.title="Thothix API (Development)"
LABEL org.opencontainers.image.description="API Backend per la piattaforma di messaggistica aziendale Thothix - Development Environment"
LABEL org.opencontainers.image.version="1.0.0-dev"
LABEL org.opencontainers.image.vendor="Thothix"
LABEL org.opencontainers.image.authors="Thothix Team"
LABEL org.opencontainers.image.source="https://github.com/thothix/thothix"
LABEL org.opencontainers.image.documentation="https://docs.thothix.com"

EXPOSE 30000
CMD ["./main"]

# Stage finale per produzione (pi√π piccola)
FROM registry.access.redhat.com/ubi9/ubi-micro AS prod

# Metadata dell'immagine per produzione
LABEL org.opencontainers.image.title="Thothix API (Production)"
LABEL org.opencontainers.image.description="API Backend per la piattaforma di messaggistica aziendale Thothix - Production Environment"
LABEL org.opencontainers.image.version="1.0.0-prod"
LABEL org.opencontainers.image.vendor="Thothix"
LABEL org.opencontainers.image.authors="Thothix Team"
LABEL org.opencontainers.image.source="https://github.com/thothix/thothix"
LABEL org.opencontainers.image.documentation="https://docs.thothix.com"

WORKDIR /app

# Copia il binario dal builder stage
COPY --from=builder /app/main .

# Espone la porta
EXPOSE 30000
USER 1001
CMD ["./main"]
