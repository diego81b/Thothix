# Production overrides with HashiCorp Vault
services:
  # Override vault service for production (always enabled)
  vault:
    build:
      context: .
      dockerfile: Dockerfile.vault
      target: prod
    image: thothix/vault:1.15.0-thothix1.0-prod
    container_name: thothix-vault-prod
    restart: unless-stopped
    command:
      - sh
      - -c
      - |
        vault server -config=/vault/config/vault.hcl
    ports:
      - '8200:8200'
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_prod_data:/vault/data
      - vault_prod_logs:/vault/logs
      - ./vault/config:/vault/config
    networks:
      - app-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8200/v1/sys/health?standbyok=true&sealedcode=200&uninitcode=200',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  vault-init:
    image: thothix/vault:1.15.0-thothix1.0-prod
    container_name: thothix-vault-init-prod
    depends_on:
      vault:
        condition: service_healthy
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: ${VAULT_ROOT_TOKEN}
      VAULT_MOUNT: thothix
      ENVIRONMENT: production
    volumes:
      - ./vault/scripts:/scripts:ro
    command: ['/bin/sh', '/scripts/init-secrets.sh']
    networks:
      - app-network
    restart: 'no'

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
      target: prod
    image: thothix/postgres:17.5-thothix1.0-prod
    container_name: thothix-postgres-prod
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: thothix-prod
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data

  thothix-api:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
      target: prod
    image: thothix/api:1.0.0-prod
    container_name: thothix-api-prod
    environment:
      # Vault configuration
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: ${VAULT_APP_TOKEN}
      VAULT_MOUNT: thothix
      USE_VAULT: 'true'

      # Application settings
      ENVIRONMENT: production
      GIN_MODE: release
      DB_NAME: thothix-prod
      PORT: '30000'
    depends_on:
      postgres:
        condition: service_healthy
      vault:
        condition: service_healthy
      vault-init:
        condition: service_completed_successfully
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:30000/health']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_prod_data:
    driver: local
  vault_prod_data:
    driver: local
  vault_prod_logs:
    driver: local

networks:
  app-network:
    driver: bridge
